What happens when you initialize a repository? Why do you need to do it?

	It creates a subfolder called .git with initially no commits. You need to do it because otherwise there's no data in which git can compare and track modified files.

	
How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area is an intermediate place between the repository and the working directory. It is in the working directory but not yet in the repository.
	It's value is that it allows you to add only certain files to a commit operation.
	
	
How can you use the staging area to make sure you have one commit per logical change?
	
	By only adding logically related files to the staging area before committing.
	
	
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When attempting major changes or experimental changes, you can carry them all out on a branch without convoluting the master branch.
	Experimental or major changes can require lots of changes and commits which might be ultimately unwound so it would be pointless and messy adding all of these to the main branch. Branches allow you to do all this on a seperate thread and only commit to the master if the changes are going to be permanent.

	
How do the diagrams help you visualize the branch structure?

	By showing you at which point a branch departed from the master commit branch and allowing you to see what changes have occurred in the master since creating the branch.